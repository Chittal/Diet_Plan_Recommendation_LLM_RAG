1. First prompt
Bot: Hello! I'm here to help you create a diet plan tailored to your needs. How do you want diet plans?
Button: Disease, Symptoms
2. Symptoms
Bot: Got it! Could you share more details? Specifically, your age, height, weight and symptoms.
Form like: age, weight, height, symptoms
3. Provide diet plans based on symptoms
Bot: XXX diet plans. Do you have any questions on this diet plan?
Button: Yes, No
4. Any question - Yes
Bot: Please enter your query.
5. Any question - No
Bot: Do you want to create another diet plan?
Button: Yes, No
6. Another diet plan - Yes
Then loop to 1
7. Another diet plan - No
Thank you!
8. Symptoms
Bot: Got it! Could you share your age, height, weight and disease?
Form like: age, weight, height, disease
9. Provide diet plans based on symptoms
Bot: XXX diet plans. Do you have any questions on this diet plan?
Button: Yes, No
10. Any question - Yes
Bot: Please enter your query.
11. Any question - No
Bot: Do you want to create another diet plan?
Button: Yes, No
12. Another diet plan - Yes
Then loop to 1
13. Another diet plan - No
Thank you!

======================================
Symptoms
heart = Chest pain, angina, pain in heart muscle, shortness of breath.
diabetes = 


======================================
Tasks
-------------------------------------
1. convert nutrients to dict amount and unit then fetch from postgres -- DONE
2. Loading symbol --- DONE
3. Try to ask prompt to combine documents (Bring same result for same query)
4. Find symptom based retriever for each disease
5. Beautify plan response -- DONE
6. Fix prompt to think on own for followup questions -- DONE

7. Fix prompt to say nutrients in singular and say only nutrients (not food) -- DONE
8. Find list of symptoms for diabetes and heart disease.
9. Create consistent response
10. Answer only followup questions related to diet plan -- DONE
11. If error in validation, handle in app flow (frontend)
12. Format response beautifully using LLM -- DONE
13. Say to user "You have possibility of ____ disease consult with doctor. Follow these diet plans to stay healthy" in symptoms flow. -- DONE
14. give unique recommended food, Beautify text output with bulletins and title in bold.


11. Update text, button and chatbot tilte in app - UI -- DONE

-> check sources if it is picking same set everytime I query disease
-> It tries to summarze evrytime on its own
-> If I ask specific question from doc, it should it say correctly( followup)